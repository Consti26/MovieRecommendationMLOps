version: '3.9'

services:
  database:
    build: 
      context: "${SCRIPT_DIR}/data"
      dockerfile: "dockerfile"
    container_name: "database_container"
    ports:
      - "8000:8000" # Expose the database API port
    volumes:
      - "database_raw_volume:/home/api_database/raw_data"
      - "database_processed_volume:/home/api_database/processed_data"
    environment:
      - "BASE_URL=http://localhost:8000"
    env_file:
      - "${SCRIPT_DIR}/data/.env_git"
    networks: 
      - "movie_recommendation_network"
  mlflow:
    build: 
      context: "${SCRIPT_DIR}/models/mlflow"
      dockerfile: "dockerfile"
    container_name: "mlflow_container"
    volumes:
      - "mlflow_data:/mlflow"
    env_file:
      - "${SCRIPT_DIR}/models/mlflow/.env_git"
    ports:
      - "5000:5000"
    networks:
      - "movie_recommendation_network"
    restart: always
  preprocessing:
    build: 
      context: "${SCRIPT_DIR}/features"
      dockerfile: "dockerfile"
    container_name: "preprocess_container"
    networks: 
      - "movie_recommendation_network"
    ports:
      - "9000:9000"
    environment:
      - "BASE_URL=http://database:8000"
  training:
    build: 
      context: "${SCRIPT_DIR}/models"
      dockerfile: "${SCRIPT_DIR}/models/training/dockerfile"
    container_name: "training_container"
    depends_on:
      - "database"
      - "mlflow"
    volumes:
      - "mlflow_data:/mlflow"
    env_file:
      - "${SCRIPT_DIR}/models/training/.env_git"
    ports:
      - "8080:8080"
    networks:
      - "movie_recommendation_network"
  inference:
    build: 
      context: "${SCRIPT_DIR}/models"
      dockerfile: "${SCRIPT_DIR}/models/inference/dockerfile"
    container_name: "inference_container"
    depends_on:
      - "mlflow"
    volumes:
      - "mlflow_data:/mlflow"
    env_file:
      - "${SCRIPT_DIR}/models/inference/.env_git"
    ports:
      - "8090:8090"
    networks:
      - "movie_recommendation_network"

volumes:
  mlflow_data:
    driver_opts:
      type: none
      device: "${SCRIPT_DIR}/models/mlflow/workdir"
      o: bind
  database_raw_volume:
    driver_opts:
      type: none
      device: "${SCRIPT_DIR}/data/raw_data"
      o: bind
  database_processed_volume:
    driver_opts:
      type: none
      device: "${SCRIPT_DIR}/data/processed_data"
      o: bind

networks:
  movie_recommendation_network:
